# Generated by Django 5.0.1 on 2024-10-27 22:40

import django.db.models.deletion
from django.db import migrations, models
import taggit.managers
from django.conf import settings




class Migration(migrations.Migration):

    dependencies = [
        ('got', '0009_megger_estator_pi_1min_l1_tierra_overtime'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),

    ]

    operations = [
        migrations.AddField(
            model_name='overtime',
            name='approved',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='overtime',
            name='asset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='got.asset'),
        ),
        migrations.AddField(
            model_name='overtime',
            name='cedula',
            field=models.CharField(default='', max_length=20),
        ),
        migrations.AddField(
            model_name='overtime',
            name='nombre_completo',
            field=models.CharField(default='', max_length=200),
        ),

        ####
        migrations.AlterModelOptions(
            name='solicitud',
            options={'ordering': ['-creation_date'], 'permissions': (('can_approve', 'Aprobar solicitudes'), ('can_cancel', 'Puede cancelar'), ('can_view_all_rqs', 'Puede ver todas las solicitudes'), ('can_transfer_solicitud', 'Puede transferir solicitudes'))},
        ),
        migrations.CreateModel(
            name='EquipmentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('subject', models.CharField(choices=[('movement', 'Movimiento'), ('part_change', 'Cambio de repuesto/pieza'), ('preventive_maintenance', 'Mantenimiento Preventivo'), ('corrective_maintenance', 'Mantenimiento Correctivo'), ('specialized_intervention', 'Intervenci√≥n Especializada')], max_length=50)),
                ('annotations', models.TextField(blank=True, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='got.equipo')),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.DeleteModel(name='Overtime'),
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.DeleteModel(name='Preoperacional'),
                migrations.DeleteModel(name='PreoperacionalDiario'),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(blank=True, max_length=200, null=True)),
                ('tipo', models.CharField(choices=[('m', 'Material'), ('h', 'Herramienta/Equipo'), ('s', 'Servicio')], max_length=1)),
                ('cantidad', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='got.item')),
                ('ruta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisitos', to='got.ruta')),
            ],
        ),
        migrations.AlterModelOptions(
            name='salida',
            options={'managed': False, 'ordering': ['-fecha'], 'permissions': (('can_approve_it', 'Aprobar salidas'),)},
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.DeleteModel(name='Salida'),
            ]
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
